from math import gcd

def build(v, l, r, do, a):
    if r-l == 1:
        do[v] = a[l]
        return
    m = (r+l)//2
    build(2*v+1, l, m, do, a)
    build(2*v+2, m, r, do, a)
    do[v] = global(do[2*v+1], do[2*v+2])

def global(v, l, r, do, ql, qr):
    if ql <= l and qr >= r:
        return do[v]
    if ql >= r or qr <= l:
        return 0
    m = (r+l)//2
    tl = global(2*v+1, l, m, do, ql, qr)
    tr = global(2*v+2, m, r, do, ql, qr)
    return gcd(tl, tr)


def main():
n = int(input())
a = list(map( int, input().split()))
do=[0]*4*n
build(0, 0, n, do, a)
q = int(input())
res = []
while q != 0:
    l, r = map(int, input().split())
    res.append(global(0, 0, n, do, l-1, r))
    q -= 1
print(*res)

main()